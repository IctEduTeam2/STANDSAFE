<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">
	<!-- 관리자 등록 -->
	<insert id="insert" parameterType="adVO">
		insert into ADMIN_T(ADMIN_ID, ADMIN_PW, ADMIN_NAME, ADMIN_NICK,
		<if test="ADMIN_MAIL != null and ADMIN_MAIL != ''">
			ADMIN_MAIL,
		</if>
		<if test="ADMIN_BIRTH != null and ADMIN_BIRTH != ''">
			ADMIN_BIRTH,
		</if>
		<if test="ADMIN_PHONE != null and ADMIN_PHONE != ''">
			ADMIN_PHONE,
		</if>
		<if test="ADMIN_ADDR != null and ADMIN_ADDR != ''">
			ADMIN_ADDR,
		</if>
		ADMIN_ST)
		values(
		#{ADMIN_ID}, #{ADMIN_PW}, #{ADMIN_NAME},
		#{ADMIN_NICK},
		<if test="ADMIN_MAIL != null and ADMIN_MAIL != ''">
			#{ADMIN_MAIL},
		</if>
		<if test="ADMIN_BIRTH != null and ADMIN_BIRTH != ''">
			#{ADMIN_BIRTH},
		</if>
		<if test="ADMIN_PHONE != null and ADMIN_PHONE != ''">
			#{ADMIN_PHONE},
		</if>
		<if test="ADMIN_ADDR != null and ADMIN_ADDR != ''">
			#{ADMIN_ADDR},
		</if>
		1)
	</insert>

	<!-- 아이디 중복체크 -->
	<select id="idCheck" parameterType="String" resultType="int">
		SELECT
		COUNT(*) FROM ADMIN_T
		WHERE ADMIN_ID = #{ADMIN_ID}
	</select>

	<!-- 닉네임 중복체크 -->
	<select id="nickCheck" parameterType="String" resultType="int">
		SELECT
		COUNT(*) FROM ADMIN_T
		WHERE ADMIN_NICK = #{ADMIN_NICK}
	</select>

	<!-- 로그인 -->
	<select id="selectPwd" parameterType="String" resultType="adVO">
		select
		* from ADMIN_T where ADMIN_ID = #{ADMIN_ID}
	</select>

	<!-- 관리자 전체 검색 -->
	<select id="adminlist" parameterType="Map" resultType="adVO">
		select *
		from ADMIN_T where ADMIN_ST = 1
		order by ADMIN_NUM desc limit #{limit}
		offset #{offset}
	</select>
	<!-- 관리자 검색 몇명인지 -->
	<select id="countAdmins" resultType="int">
		SELECT COUNT(*) FROM ADMIN_T
		WHERE admin_st != 0
	</select>
	<!-- 1사람 결과 -->
	<select id="adminDetail" parameterType="int" resultType="adVO">
		SELECT *
		FROM ADMIN_T WHERE ADMIN_NUM = #{ADMIN_NUM}
	</select>
	<!-- 관리자 업데이트 -->
	<update id="adminUpdate" parameterType="adVO">
		UPDATE ADMIN_T
		<set>
			<if test="ADMIN_PW != null">ADMIN_PW = #{ADMIN_PW},</if>
			<if test="ADMIN_NICK != null">ADMIN_NICK = #{ADMIN_NICK},</if>
			<if test="ADMIN_PHONE != null">ADMIN_PHONE = #{ADMIN_PHONE},</if>
			<if test="ADMIN_BIRTH != null">ADMIN_BIRTH = #{ADMIN_BIRTH},</if>
			<if test="ADMIN_MAIL != null">ADMIN_MAIL = #{ADMIN_MAIL},</if>
			<if test="ADMIN_ADDR != null">ADMIN_ADDR = #{ADMIN_ADDR},</if>
		</set>
		WHERE ADMIN_ID = #{ADMIN_ID}
	</update>

	<!-- 관리자 삭제용 업뎃 -->
	<update id="adminOut">
		UPDATE ADMIN_T
		SET ADMIN_ST = 0
		WHERE ADMIN_NUM =
		#{ADMIN_NUM}
	</update>

	<!-- 관리자의 상태를 비활성화로 업데이트하는 쿼리 -->
	<update id="deactivateAdmins" parameterType="list">
		UPDATE ADMIN_T
		SET ADMIN_ST = 0
		WHERE ADMIN_NUM IN
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item, jdbcType=INTEGER}
		</foreach>
	</update>

	<!-- 삭제된 관리자 검색 -->
	<select id="getDeactivatedAdminlist" parameterType="Map"
		resultType="adVO">
		select * from ADMIN_T where ADMIN_ST = 0
		order by ADMIN_NUM
		desc limit #{limit} offset #{offset}
	</select>
	<!-- 삭제된 관리자 검색 몇명인지 -->
	<select id="countDeactivatedAdmins" resultType="int">
		SELECT COUNT(*)
		FROM ADMIN_T
		WHERE admin_st != 1
	</select>

	<!-- 검색 -->
	<select id="getAdminlistByKeyword" parameterType="map"
		resultType="adVO">
		SELECT * FROM ADMIN_T
		WHERE
		<choose>
			<when test="category == 'ADMIN_ID'">
				ADMIN_ID LIKE CONCAT('%', #{keyword}, '%')
			</when>
			<when test="category == 'ADMIN_NAME'">
				ADMIN_NAME LIKE CONCAT('%', #{keyword}, '%')
			</when>
			<when test="category == 'ADMIN_NICK'">
				ADMIN_NICK LIKE CONCAT('%', #{keyword}, '%')
			</when>
			<when test="category == 'ADMIN_MAIL'">
				ADMIN_MAIL LIKE CONCAT('%', #{keyword}, '%')
			</when>
			<when test="category == 'ADMIN_BIRTH'">
				ADMIN_BIRTH LIKE CONCAT('%', #{keyword}, '%')
			</when>
			<when test="category == 'ADMIN_PHONE'">
				ADMIN_PHONE LIKE CONCAT('%', #{keyword}, '%')
			</when>
			<when test="category == 'ADMIN_ADDR'">
				ADMIN_ADDR LIKE CONCAT('%', #{keyword}, '%')
			</when>
			<otherwise>
				1=1
			</otherwise>
		</choose>
		LIMIT #{offset}, #{limit}
	</select>

</mapper>
	









