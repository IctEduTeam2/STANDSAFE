<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bbs">
 
 
 	<!--공지사항  -->
      <!-- 페이징을 위한 시작과 끝구하고, 리스트 출력  -->
   <select id="noticelist" parameterType="Map" resultType="nbbsvo">
    	select * from NOTICE_T  where NOTICE_ST = 1  
    	order by NOTICE_NUM desc limit #{limit} offset #{offset}
    	
   </select> 
   
      <!--게시글 갯수구하기  -->
   <select id="noticecount" resultType="int">
   	select count(*) from NOTICE_T
   </select>
   
   <!--상세  -->
   <select id="noticeonelist" parameterType="String" resultType="nbbsvo">
   	select * from NOTICE_T where NOTICE_NUM = #{NOTICE_NUM}
   </select>
   
   <!--조회수  -->
   <update id="noticehitup" parameterType="String">
   	update NOTICE_T
   	set NOTICE_HIT = NOTICE_HIT +1
   	where NOTICE_NUM = #{NOTICE_NUM}
   </update>
   
   
   
   	<!--이벤트 -->
      <!-- 페이징을 위한 시작과 끝구하고, 리스트 출력  -->
   <select id="eventlist" parameterType="Map" resultType="ebbsvo">
    	select * from EVENT_T  where EVENT_ST = 1  
    	order by EVENT_NUM desc limit #{limit} offset #{offset}
    	
   </select> 
   
      <!--게시글 갯수구하기  -->
   <select id="eventcount" resultType="int">
   	select count(*) from EVENT_T
   </select>
   
   <!--상세  -->
   <select id="eventonelist" parameterType="String" resultType="ebbsvo">
   	select * from EVENT_T where EVENT_NUM = #{EVENT_NUM}
   </select>
   
   <!--조회수  -->
   <update id="eventhitup" parameterType="String">
   	update EVENT_T
   	set EVENT_HIT = EVENT_HIT +1
   	where EVENT_NUM = #{EVENT_NUM }
   </update>
   
   
   
   <!-- faq  -->
    <select id="faqlist" parameterType="Map" resultType="faqbbsvo">
    	select * from FAQ_T  where FA_ST = 1  
    	order by FA_NUM desc limit #{limit} offset #{offset}
    	
   </select> 
   
       <!--게시글 갯수구하기  -->
   <select id="faqcount" resultType="int">
   	select count(*) from FAQ_T
   </select>

   <!--조회수  -->
   <update id="faqhitup" parameterType="String">
   	update FAQ_T
   	set FA_HIT = FA_HIT +1
   	where FA_NUM = #{FA_NUM }
   </update>
   
    <select id="faqonelist" parameterType="String" resultType="faqbbsvo">
   	select * from FAQ_T where  FA_NUM  = #{ FA_NUM }
   </select>
   
   
   
     <!-- 상품 Q&A -->
      <!-- 페이징을 위한 시작과 끝구하고, 리스트 출력  -->
   <select id="qnalist" parameterType="Map" resultType="qnabbsvo">
    	select * from QA_T 
    	order by BOARD_NUM desc limit #{limit} offset #{offset}
    	
   </select> 
   
      <!--게시글 갯수구하기  -->
   <select id="qnacount" resultType="int">
   	select count(*) from QA_T
   </select>
   
   <!--상세  -->
   <select id="qnaonelist" parameterType="String" resultType="qnabbsvo">
   	select * from QA_T where BOARD_NUM = #{BOARD_NUM}
   </select>
   
   <insert id="qnainsert" parameterType="qnabbsvo" >
   	insert into QA_T (BOARD_SUBJECT, BOARD_WRITER, BOARD_CONTENT, BOARD_FILE, BOARD_ST,BOARD_LOCK, BOARD_DATE, BOARD_TYPE,CLIENT_NUM,PROD_NUM)
   	values(#{BOARD_SUBJECT},#{BOARD_WRITER},#{BOARD_CONTENT},#{BOARD_FILE},1,#{BOARD_LOCK},SYSDATE(),#{BOARD_TYPE},#{CLIENT_NUM}, #{PROD_NUM})
   </insert>
   
   
   <update id="qnaupdate" parameterType="qnabbsvo">
   	update QA_T
	set
    BOARD_SUBJECT=#{BOARD_SUBJECT},
    BOARD_CONTENT=#{BOARD_CONTENT},
    BOARD_FILE=#{BOARD_FILE},
    BOARD_ST=1,
    BOARD_LOCK=#{BOARD_LOCK},
    BOARD_UPDATE=SYSDATE(),
    BOARD_TYPE=#{BOARD_TYPE},
    CLIENT_NUM=#{CLIENT_NUM},
    PROD_NUM=#{PROD_NUM}
	where BOARD_NUM=#{BOARD_NUM}
   </update>



   <update id="qnadelete" parameterType="String">
   	update QA_T
   	set BOARD_ST = 0 where BOARD_NUM = #{BOARD_NUM}
   </update>
  
  
  
  
  <!--신고 -->
  <select id="reportlist" parameterType="Map" resultType="repbbsvo">
    	select * from REPORT_T 
    	order by REPORT_NUM desc limit #{limit} offset #{offset}
    	
   </select> 
   
      <!--게시글 갯수구하기  -->
   <select id="reportcount" resultType="int">
   	select count(*) from REPORT_T
   </select>
   
   <!--상세  -->
   <select id="reportonelist" parameterType="String" resultType="repbbsvo">
   	select * from REPORT_T where REPORT_NUM = #{REPORT_NUM}
   </select>
   
   <insert id="reportinsert" parameterType="repbbsvo" >
   	insert into REPORT_T (REPORT_SUBJECT, REPORT_WRITER,REPORT_CONTENT, REPORT_FILE, REPORT_DATE, REPORT_TYPE,CLIENT_NUM,PROD_NUM)
   	values(#{REPORT_SUBJECT},#{REPORT_WRITER},#{REPORT_CONTENT},#{REPORT_FILE},SYSDATE(),#{REPORT_TYPE},#{CLIENT_NUM}, #{PROD_NUM})
   </insert>
   
   
   
   <!-- review -->

    <!-- 페이징을 위한 시작과 끝구하고, 리스트 출력  -->
   <select id="reviewlist" parameterType="Map" resultType="reviewbbsvo">
    	select * from REVIEW_T 
    	order by RE_NUM desc limit #{limit} offset #{offset}
    	
   </select> 
   
      <!--게시글 갯수구하기  -->
   <select id="reviewcount" resultType="int">
   	select count(*) from REVIEW_T
   </select>
   
   <!--상세  -->
   <select id="reviewonelist" parameterType="String" resultType="reviewbbsvo">
   	select * from REVIEW_T where RE_NUM = #{RE_NUM}
   </select>
   
   <insert id="reviewinsert" parameterType="reviewbbsvo" >
   	insert into REVIEW_T (RE_SUBJECT, RE_WRITER, RE_CONTENT, RE_FILE, RE_TYPE,  RE_DATE, RE_UPDATE, RE_LOCK,CLIENT_NUM,PROD_NUM)
   	values(#{RE_SUBJECT},#{RE_WRITER},#{RE_CONTENT},#{RE_FILE},#{RE_TYPE},SYSDATE(),#{RE_UPDATE},#{RE_LOCK}, #{CLIENT_NUM}, #{PROD_NUM})
   </insert>
   
   
   <update id="reviewupdate" parameterType="reviewbbsvo">
   	update REVIEW_T
	set
    RE_SUBJECT=#{RE_SUBJECT},
    RE_CONTENT=#{RE_CONTENT},
    RE_FILE=#{RE_FILE},
    RE_LOCK=#{RE_LOCK},
    RE_UPDATE=SYSDATE(),
    RE_TYPE=#{RE_TYPE},
    CLIENT_NUM=#{CLIENT_NUM},
    PROD_NUM=#{PROD_NUM}
	where RE_NUM=#{RE_NUM}
   </update>

   <update id="reviewdelete" parameterType="String">
   	update REVIEW_T
   	set RE_ST = 0 where RE_NUM = #{RE_NUM}
   	
   </update>
   
   
   <!-- 검색 -->
   
   <select id="searchevcon" parameterType="Map" resultType="ebbsvo">
   	select * from EVENT_T where EVENT_CONTENT LIKE CONCAT('%', #{searchText}, '%') 
    </select>
    
   
    <select id="searchevsub" parameterType="String" resultType="ebbsvo">
   	select * from EVENT_T where EVENT_SUBJECT LIKE CONCAT('%', #{searchText}, '%')
    </select>
    
  
	
   
</mapper>


